<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="member">
	<!-- 로그인 성공 시 검색되는 모든 컬럼을 memberDTO 객체에 담아 반환한다.   -->
	<select id = "login_check" resultType="com.example.toyProject.model.member.dto.MemberDTO" >
		select * from member
		where userid=#{userid} and password=#{password}
	</select>
	
	<select id = "list" resultType="com.example.toyProject.model.member.dto.MemberDTO">
		select * from member order by joindate desc
								offset #{start} rows fetch next #{end} rows only
	</select>
	
	<select id = "count" resultType="Integer">
		select count(*) from member
	</select>
	
	<!-- 아이디 중복 여부 체크 -->
	<select id = "idCheck" resultType="Integer" parameterType="String">
		select count(*) from member where userid = #{userid}
	</select>
	
	
	<!-- 회원가입 수행  -->
	<select id = "signUp" parameterType="com.example.toyProject.model.member.dto.MemberDTO">
		insert into member (membernum, userid, password, name, phonenum, joindate) 
			values (seq_member.nextval , #{userid}, #{password} , #{name}, #{phonenum}, sysdate)
	</select>
	
	<!-- 수정할 회원 정보 가져오기 -->
	<select id = "getModifyInfo" resultType="com.example.toyProject.model.member.dto.MemberDTO">
		select * from member where userid = #{userid}
	</select>
	
	<!-- 회원 등록 및 수정 -->
	<update id = "registModify">
		merge into member using dual
	    	on (userid = #{userid})
			    when matched then
			        update set name = #{name}, phonenum = #{phonenum}, password = #{password}
			    when not matched then
			        insert (membernum, userid, password, name, phonenum, joindate)
			        values (seq_member.nextval, #{userid}, #{password}, #{name}, #{phonenum}, sysdate)
	</update>
	
	
	
	
</mapper>	