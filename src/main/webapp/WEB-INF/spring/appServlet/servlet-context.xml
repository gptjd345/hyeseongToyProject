<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.example.toyProject" />
	
	<!-- 로그인 인터셉터 빈을 서블릿 컨테이너에 등록한다.  -->
	 
	<beans:bean id="LoginInterceptor" class="com.example.toyProject.Interceptor.LoginInterceptor"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/member/list"/>
			<mapping path="/member/modify"/>
			<mapping path="/member/registration"/>
			<mapping path="/member/registModify.do"/>
		
			<beans:ref bean="LoginInterceptor"/>
		</interceptor>
		
		
	</interceptors> 
	
	<!-- HttpInvoker Export 할 서비스 내용 -->
	<beans:bean name="/httpinvoker/MemberService.http" 
				class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
     <beans:property name="service" ref="memberServiceImpl"/>      
     <beans:property name="serviceInterface" value="com.example.toyProject.service.member.MemberService"/>  
     
    </beans:bean>
	
	<!-- 핸들러 매핑을 빈으로 등록해서 httpinvoker를 이용한 처리를 맡긴다.  -->
	<!-- <beans:bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<beans:property name="mappings">
			<beans:props>
				<beans:prop key="/httpinvoker/MemberService.http">memberSerivceExporter</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->
	
	
	
	
	
	
	
</beans:beans>
